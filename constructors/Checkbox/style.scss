@import "../../styles/properties";

@mixin mixinCheckbox {
  @include initByCustom('iconOpacity', 0);
  @include initByCustom('iconClip', #{inset(0 100% 0 0)});
  @include initByCustom('iconScale', 1);

  display: inline-flex;
  align-items: flex-start;

  transition-timing-function: linear;
  transition-duration: v('d.sys.transitionDuration.standard');
  transition-property: background-color, border-color, opacity;

  &__input {
    position: absolute;
    visibility: hidden;
  }

  &__item {
    @include flexCenter;
    position: relative;

    transition: inherit;

    border-radius: 100%;

    &__icon {
      box-sizing: border-box;
      @include flexCenter;
      position: relative;

      transition: inherit;

      > * {
        opacity: v('??iconOpacity');
        clip-path: v('??iconClip');
        @include scale(v('??iconScale'));
        transition: inherit;
      }
    }
  }

  &__info {
    &__label {
      display: block;
    }
  }

  &__loading#{'.'}#{n('?progress--visible')} ~ &__item__icon > * {
    opacity: v('??colorOpacity', 0);
  }

  @include active() {
    transition-duration: v('d.sys.transitionDuration.sm');
  }

  input:checked ~ * {
    @include initByCustom('iconOpacity', 1);
    @include initByCustom('iconClip', #{inset(0 0 0 0)});
    @include initByCustom('iconScale', 1);
    transition-property: background-color, border-color, clip-path;
  }

  &--required {
    @include subclass('info') {
      &__label {
        &:after {
          content: "*";
          @include color(v('??comp.required.color'));
        }
      }
    }
  }
}
